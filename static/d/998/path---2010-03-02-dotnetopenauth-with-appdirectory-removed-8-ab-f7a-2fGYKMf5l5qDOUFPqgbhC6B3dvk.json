{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"8963cf2b-479b-55bf-99af-a57be8744a01","html":"<p>In my <a href=\"http://seanlynch.io/open-id-with-dotnetopenid/\">previous post</a> I had talked about my decision to implement OpenId, and how DotNetOpenAuth worked well for this. In this post I will talk a little about the only issue that I ran into while doing this.</p>\n<p>The root of this issue had to do with how my hosting is setup for sites that have low traffic. I host these sites on winhost which allows for an unlimited number of domain pointers. They also have the URL Rewrite module, so I can rewrite <a href=\"http://webquestbuilder.com/\">http://webquestbuilder.com/</a> to <a href=\"http://webquestbuilder.com/sitedir\">http://webquestbuilder.com/sitedir</a> enabling the site to be moved later when demand requires more horsepower without having to deal with the removal of the sub directory.</p>\n<p>The problem that came from this setup was that DotNetOpenAuth determined that the releam was webquestbuilder.com/sitedir instead of webquestbuilder.com, and returned from openid with to the sitedir/authenticate.  <a href=\"http://blog.nerdbank.net/\" target=\"_blank\">Andrew Arnott</a> pointed me in the right direction pretty quick after my tweet. Here is what I ended up with to fix this, it is in 2 parts.</p>\n<p>The first is making the request:</p>\n<p><code class=\"language-text\">&lt;br /&gt;\nif (isInSubDir)&lt;br /&gt;\n{&lt;br /&gt;\nrequest = openid.CreateRequest(Request.Form[&quot;openid_identifier&quot;], new Realm(&quot;http://webquestbuilder.com/&quot;),&lt;br /&gt;\nnew Uri(&quot;http://webquestbuilder.com/User/Authenticate/&quot;));&lt;br /&gt;\n}&lt;br /&gt;\nelse&lt;br /&gt;\n{&lt;br /&gt;\nrequest = openid.CreateRequest(Request.Form[&quot;openid_identifier&quot;]);&lt;br /&gt;\n}</code></p>\n<p>The second part is dealing with the response:</p>\n<p><code class=\"language-text\">&lt;br /&gt;\nvar isInSubDir = Request.ApplicationPath!=&quot;/&quot;;&lt;br /&gt;\nIAuthenticationResponse response;&lt;br /&gt;\nif (isInSubDir)&lt;br /&gt;\n{&lt;br /&gt;\nvar absoluteUri = httpRequest.Url.AbsoluteUri;&lt;br /&gt;\nvar rawUrl = httpRequest.RawUrl;&lt;br /&gt;\nif(isInSubDir)&lt;br /&gt;\n{&lt;br /&gt;\nabsoluteUri = absoluteUri.Replace(Request.ApplicationPath, &quot;&quot;);&lt;br /&gt;\nrawUrl = rawUrl.Replace(Request.ApplicationPath, &quot;&quot;);&lt;br /&gt;\n}&lt;br /&gt;\nvar httpRequestInfo = new HttpRequestInfo(httpRequest.HttpMethod, new Uri(absoluteUri), rawUrl, headers, httpRequest.InputStream);&lt;br /&gt;\nresponse = openid.GetResponse(httpRequestInfo); �&lt;br /&gt;\n}&lt;br /&gt;\nelse&lt;br /&gt;\n{&lt;br /&gt;\nresponse = openid.GetResponse();&lt;br /&gt;\n}</code></p>\n<p><span class=\"tve-leads-two-step-trigger tl-2step-trigger-0\"></span><span class=\"tve-leads-two-step-trigger tl-2step-trigger-0\"></span></p>","frontmatter":{"title":"DotNetOpenAuth with AppDirectory removed","date":"March 02, 2010"}}},"pageContext":{"slug":"/2010-03-02-dotnetopenauth-with-appdirectory-removed/","previous":{"fields":{"slug":"/2010-03-02-open-id-with-dotnetopenid/"},"frontmatter":{"title":"Open Id with DotNetOpenId"}},"next":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World"}}}}